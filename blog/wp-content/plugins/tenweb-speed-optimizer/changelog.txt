=== 10Web Booster - Website speed optimization, Cache & Page Speed optimizer ===
Contributors: 10web
Tags: cache, speed, optimize, performance, pagespeed, web vitals, critical css
Requires at least: 5.0
Tested up to: 6.1
Requires PHP: 7.1
Stable tag: 2.13.37
License: GPLv2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html

Speed up your site with 10Web Booster. Pass Core Web Vitals by optimizing HTML / CSS / JavaScript, Image Optimization, Lazy Loading, Cache, Google Fonts, and more.

== Description ==

10Web Booster is the speed optimization plugin for improving the overall performance of any website.10Web Booster wants you to focus and thrive in the creative aspects of your WordPress website by allowing us to concentrate on your WordPress performance optimization.

Get a 90+ PageSpeed score and pass Core Web Vitals automatically. Rank higher on Google, increase conversions and grow your business.

= Useful Links: =

[10Web Booster](https://10web.io/page-speed-booster/)

https://www.youtube.com/watch?v=npmYPmrI0gc


Are you looking for a WordPress page speed plugin that’ll automatically speed up your WordPress site? Then 10Web Booster is exactly website speed optimizer you’re looking for! 
Our WordPress performance plugin will transform your website in no time, enhancing the visitors' user experience, SEO, engagement, and conversion rates. 

10Web Booster works on desktop and mobile versions of websites of any complexity. Optimize your website pages, experiment with every level we offer, and obtain rewarding results from the best WordPress speed plugin in the market.

Check out the extensive feature list of the 10Web Booster below and take a more detailed look at everything we offer.


== Benefits ==
*   **Automated 90+ PageSpeed**
*   **Optimized Core Web Vitals**
*   **Higher search engine rankings**
*   **Up to 7% boost in conversions**
*   **Up to 40% boost in visitor engagement**
*   **Up to 53% mobile traffic engagement boost**

== What’s in it ==

**Optimization of homepage + 5 pages , embedded images included**
10Web Booster is made possible thanks to dozens of technical optimizations:

= Page Cache =

A cache is a fast-retrieval, short-term storage space where copies of recently accessed data and resources are saved. A cache significantly speeds up page speed and performance by downloading these commonly accessed data from the source, creating a copy of these resources and temporarily keeping them in a more easily accessible storage space from where the data can be accessed faster once the visitor returns. This short-term space can be a browser or a web server or even the original web server which also keeps different format copies of your resources. When you update your website data, the saved copies are also revised and updated. 

10Web Booster uses a number of cache techniques, including page cache for HTML, file cache, smart cache invalidation, session-aware, and browser-aware caching and device and cookie-aware caching. 

Page cache takes care of dynamic pages. In WordPress, dynamic pages are written in the PHP backend language, which require a great deal of time to generate, when compared to the generation time of traditional static web pages in plain HTML. Page cache creates and stores copies of dynamic pages in the format of static files, making their retrieval as quick as possible. When a visitor enters your site, this “static” copy of your page is immediately loaded from the cache instead of your hosting. 

​​File cache, or resource cache, on the other hand, allows for storage of created minified and compressed scripts and styles. This process also speeds up your page speed and performance.

10Web Booster Pro employs backend or server caching, and through NGINX FastCGI Cache, caches a variety of resources from pages to feeds to 301-redirects on subdomains. This way you obtain page speed and retrieval at the fastest possible speed.


= CSS & HTML Minification & Compression =

The minification and merger of CSS and HTML is the procedure of reducing file size by a couple of bytes. The significance of this stems from the fact that larger files require more resources which may slow down website load time.

= JS Minification and Compression =

Compression of lengthy algorithmic JS codes is standard practice. The crunching of JS code, meaning, the removal of all the extra spaces, comments and other components which make the code readable and understandable, reduces the time of downloading JavaScript, directly improving WordPress Speed. By combining JS scripts, we can also minify the files, further reducing execution time. 

= Image Optimization =

Image optimization leans on minimizing file size through image compression while simultaneously preserving image quality. 10Web’s image optimization achieves that and more. Through WebP compression, container-specific image resizing, and preloading of images, images can be optimized and loaded within seconds. 

Container-specific image resizing finds or generates copies of images in various sizes. It then uses these differently sized copies of images on different-sized screens. This technique reduces valuable seconds of image load time and guarantees that you do not sacrifice quality for page speed. 
Preloading images also significantly reduces page load time while providing your visitors with a seamless user experience. Preloading images means recovering images prior to visitor interaction. This method does make sense for certain cases - and not for all types of image, like mouseover images or slide show images. 


= Defer JS and CSS Execution =

Having content that's immediately visible when a user opens your website is only possible with file load optimization through prioritization of important CSS and deferral of JavaScript.  That’s how 10Web booster ensures a 90+ page speed score as the best WordPress speed plugin.

Javascript files may cause a severe reduction in page load speed. This is particularly true of third-party JavaScript files that are poorly created. Third-party JavaScript files include
widgets, trackers, analytics, ads, social, chats, media buttons, pop-ups, and other files directly embedded on your site. These JavaScript files can reduce your page load speed, and therefore must first be located, and then divided into critical and non-critical JavaScript files. Those that are not critical must be delayed and only activated when a visitor interacts with the webpage.


= Critical CSS =

Downloading complete CSS files hinder the perceived speed of your WordPress website. After the user visits the webpages, the minimum-necessary stylesheets for the proper rendering of the webpage’s visible content are loaded, while the rest is served per need. Critical CSS doesn’t block page rendering and assists in passing the Core Web Vitals. 10Web Booster’s superiority in the case of critical CSS generation is due to its algorithms which programmatically parse through your web page and collect all the CSS rules used on that page. 10Web Booster guarantees that all stylesheets for critical CSS are present and unaffected. It also ensures that rule duplicates are deleted and that styles are structured to improve performance. 10Web Booster uses the critical CSS generation technique on five different screen sizes, from mobile to desktop to deliver the most effective page speed optimize in the market. 

= Image Lazy load =

Images are one of the largest resources on a page dragging your page speed. Through the image lazy loading technique, you can delay the loading process of all the images on your page, except for those in the view of website visitors. This method saves significant seconds of load time and drastically improves all Core Web Vitals. 10Web Booster ensures that its lazy loading algorithms work perfectly and do not conflict with themes and plugins. 10Web Booster also lazy loads background images. 

= Font Swap =

The reduction and optimization of how web fonts load could potentially help in passing the Core Web Vitals assessment, thus, benefit your ranking on Google.Custom fonts require additional resources to load and only then does your page displays your hand-picked font, and of course, this takes time and adds much-feared milliseconds to your page speed. 10Web Booster adds font-display: swap. This technique first displays a generic font, therefore loading your page immediately, then swaps the default font with your custom-picked font once your original font style is set up. This swap method reduces page load time, and makes sure that FOUT or Flash of Unstyled Text and FOIT or Flash of Invisible Text issues are avoided. 



= Conversion of Image Format to WebP =

Images take up website resources and unfortunately cannot be avoided. There are ways to reduce their large size. Conversion to different formats is one solution. Conversion to JPEG or PNG was the traditional method. There is another, a newer player which produces better results. Google’s WebP compression can reduce file size, on average, 25-34% smaller than a comparable JPEG image and 26% smaller than a comparable PNG image. This significant reduction in size, substantially impacts and improves page speed. 


= iFrame and Video Lazy load =

Iframes and videos are even larger in size than images, so imagine their impact on your page speed. Through lazy loading of iframes and videos, we make sure that content not yet in the direct view of your visitor does not conflict with your page speed. The loading of these items is delayed until your user scrolls down. As with image lazy loading, iframe and video lazy loading enhance all Core Web Vitals.  


= Container-specific Image Resizing =

The container-specific image resizing method involves identifying images on your page and creating different-sized duplicates of these images. The differently sized images are then used for differently sized screens. Small-screen devices receive the small-sized images, loading them at the optimal speed possible. Medium-sized screens load medium-sized images, loading images at the fastest possible speed without sacrificing image quality. Large-sized screens, likewise, load large-sized images, ensuring the best quality and the best possible speed. Therefore, with the 10Web Booster, instead of forcing your website to load an enormous image when the user is only looking for a thumbnail, you’ll have a container-specific image at your disposal.

**10Web Booster Pro** 

= Full frontend optimization of the entire website and all images =
= Backend optimization =



**Speed Optimization Modes**

When your automated homepage optimization kicks off, we test out each and every one of the 4 modes. Consequently, we compare the results, and, as presumed, the mode that achieved the highest score while simultaneously keeping your website from breaking, will be set as your default.

You can choose any of the following four levels and manage the levels for each page individually from the Custom rules tab in your 10Web dashboard to provide. We provide the best page speed optimizer to any WordPress website, based on need. 

*   **Standard Mode:** -  Uses different standard speed optimization techniques.
*   **Balanced Mode:** -  All optimization techniques in Standard Mode + Critical CSS
*   **Strong Mode:** -  All optimization techniques in Standard Mode + JS Delay.
*   **Extreme Mode:** -  All optimization techniques in Balanced Mode + JS Delay.


###IMPORTANT:
If you think you found a bug in 10Web Booster or have any problem/question concerning the plugin, please check out [Support Forum](https://wordpress.org/support/plugin/tenweb-speed-optimizer) in our website.

== Installation ==

#### Thank you for your interest in 10Web Booster.

**Installing via WordPress**
Follow the steps below to install 10Web Booster Plugin to your website.
Log-in to your WordPress administrator panel.
Select Plugins page from toolbar menu, click Add New.
Search for 10Web Boosterin the right-top search bar if you want to download the Free version or click Upload Plugin button > “Choose file” (“Browse”) and select the 10Web Booster zip file 


**Installing via FTP**

Login to your hosting space via an FTP software, e.g. FileZilla.
Unzip the downloaded 10Web Booster plugin folder without making any changes to the folder.
Upload the 10Web Booster plugin into the following location wp-content>wp-plugins.
Login to the WordPress Administrator Panel.
Activate 10Web Booster by going to Plugins and pressing Activate button.


== Frequently Asked Questions ==



= 1. Does the 10Web Booster work on mobile also?  =

It absolutely does! With 10Web Booster you can speed up your WordPress site on both mobile and desktop.

= 2. Does 10Web Booster work on all websites?   =

10Web Booster optimizes any WordPress website’s speed automatically. Our website booster will provide optimal speed for any and all WordPress websites. 

= 3. Will the result achieved by 10Web Booster last? =

The easy answer is yes! 
As 10Web Booster is constantly being updated and syncing with Google algorithms and changes, your WordPress speed optimization results will last as long as your website is connected to the 10Web Booster!

= 4. How can I optimize other pages of my website or websites? =

After you connect your website and start the optimization for your homepage, you will be redirected to your dashboard. In the General tab, you will see a URL slot to add and optimize more pages. Add up to 5 inner pages in the free version. They will be optimized using the default mode we’ve set for your homepage, however, you can always change the optimization mode for a specific page from the Custom rules tab (Pro version).

We’ll leave you to it.

= 5. How can I upgrade to the Pro version?  = 

You can complete your website optimization by switching to 10Web Booster Pro from your personal dashboard. 

= 6. What is the difference between the four modes of optimization?   =

The four modes for your WordPress speed optimization plugin are the following:

Standard mode, which in itself includes the following features.

- CSS & HTML Minification & Compression
- Page Cache
- JS Minification and Compression
- Image Optimization
- Image Lazy load
- Font Swap
- Conversion Image Format to WebP
- iFrame and Video Lazy load
- Container-specific Image Resizing

Balanced mode includes Standard mode features + Critical CSS Generation
Strong mode includes Standard mode features + All JS Delay
Extreme mode entails Standard mode features + Critical CSS Generation + All JS Delay

= 7. What is 10Web Booster's track record?   =

10Web Booster is known for automating the process of achieving:

Automated 90+ PageSpeed 
Optimized Core Web Vitals
Higher search engine rankings
Up to 7% boost in conversions
Up to 40% boost in visitor engagement
Up to 53% mobile traffic engagement boost

= 8. How does 10Web Booster affect bounce rate?   =

With a 90+ page speed, averaging up to a load time of 1.5 seconds, bounce rate worries are out of the question with 10Web Booster. We’re better than good, literally. Good being an average of 2 seconds for load time, which translates to an average of 4 seconds of loading to cause a bounce. There’s no need to worry about your WordPress page speed optimization with the best website speed optimizer, 10Web Booster. 

= 9. How long does the optimization take?   =

As a plugin that aims to speed up WordPress sites, taking too long wasn’t an option.

WordPress speed optimization usually takes only minutes. 

= 10. Can I simultaneously use multiple speed optimizers for my website?  =

WordPress’ functionality is in its prime when there’s only one speed optimizer fix for any website at a time.
So using another speed optimizer alongside 10Web Booster is not recommended by either us or WordPress.

An alternative WordPress speed optimizer could be any one of the following:

W3 Total Cache
WP Super Cache
WP Rocket
WP Rocket Footer JS
Autoptimize
Perfmatters
WP Fastest Cache
WP-Optimize
Asset CleanUp
Shortpixel AI
Rocket Lazy load
Hummingbird
Smush
Flying Scripts
Async JavaScript
NitroPack
PageSpeed Ninja
Swift Performance Lite
Swift Performance
Fast Velocity Minify
LiteSpeed Cache
WP Performance Score Booster
SG Optimizer
Ezoic

= 11. What’s the difference between cache plugins and 10Web Booster?  =
To sum up caching plugins, they attempt to speed up your website by simply caching files, clearing site cache, compressing cached pages, and performing HTML minification. They don’t require third-party servers for operation and run inside WP servers.

10Web Booster is more than just a plugin, it’s a service that speeds up your website with a wider range of optimization techniques. These techniques can only be implemented using a specific service for website optimization (10Web Booster services), rather than running the solution inside of the WordPress hosting server.

= 12.  Does 10Web Booster replace all image optimization, caching and other optimization plugins?  =
Yes. 10Web Booster is an all-in-one solution for optimizing websites. It implements dozens of speed optimization techniques from simple minification to JS delay and critical CSS generation for frontend optimization and super-fast hosting for backend optimization. There is no need to run another speed optimization plugin along with 10Web. The only major feature it does not have yet is CDN which is included in the roadmap.

= 13. What are the caching features of 10Web Booster ?  =
10Web uses page cache and file cache. They are used to store dynamic webpages as static files. When a repeating visitor accesses your webpage,  a “static” version of your webpage is quickly loaded from the cache. This feature works for all websites optimized with 10Web Booster, including those not hosted on 10Web. For sites hosted on 10Web, even more caching options are available, including NGINX FastCGI Cache. 






== Changelog ==

= 2.13.37 =
Refactored: Plugin uninstall logic
Added: Option to exclude Elementor Pro JS fles from "Delay All JS" 
Added: "Perforamance Lab" to exclude list of plugins
Fixed: Multisite or low PHP version warnings in the plugin, refactored plugin's main file
Fixed: Updating cache constants on plugin activate/deactivate
Fixed: Deleting a page from the list of not-optimizable pages in Dashboard
Changed: "Delay All JS" option now works with script tags added in Gutenberg's text block
Added: Option to exclude "10web Photo Gallery" plugin from delay
Added: GET routes in plugin's REST API as a workaround of Cloudflare's POST to GET convertion fix
Moved: Hardcoded not-optimizable pages list to the option
Changed: Now adding <noscript> tag for lazyloaded images is optional
Fixed: Congrats popup in advanced mode
Fixed: Minor UI fixes for RTL websites
Added: .min to all minified CSS and JS files
Added: "Clear Cache" button for clients with activated White Label
Changed: Score check functionality is moved to a separate package
Changed: Generated JS and CSS files are not cleared now during cache flush, but are being overwritten
Fixed: An issue when we always call the site state update
Added: Bluehost cache is now cleared with our cache clear
Added: An option to enable WP's autoupdate for SB plugin
Changed: 10Web Transients logic is moved to a separate package
Fixed: Bug when we show Booster plan as paid when client purchased only AI Assistant
Removed: all .git folders from vendor/ directory

= 2.12.26 =
Added: Cache warmup after cleaning cache in the plugin 
Fixed: Bug with many requests to the page to determine its page ID  

= 2.12.23 =
Fixed: Security issue  

= 2.12.22 =
Changed: API keys   

= 2.12.21 =
Changed: Optimization flow   

= 2.12.15 =
Changed: Onboarding flow   
Fixed: Minor UI/UX    
 
= 2.11.43 =
Fixed: Transients and permanent cache conflicts	   

= 2.11.42 =
Fixed: Minor bug  

= 2.11.41 =
Added: NPS survey banner   
Added: Option to load excluded JS files with worker 
Added: Customer support page   
Improved: Debug log  
Fixed: Connection issues   

= 2.10.68 =	
Improved: Optimization flow   

= 2.10.66 =	
Improved: Cache structure  

= 2.10.65 =	
Added: New signup logic  
Fixed: "Optimized Background Images" option  
Fixed: Issue when non-cached page is served   

= 2.10.46 =	
Changed: Design for plugin interface  
Improved: File cache  
Changed: All aggregated CSS and JS files now have same naming  
Added: Option to exclude popular sliders from “Delay All JS” option  
Added: Smart lazyload for iframes, sliders and videos. Now if there is no such item on the page, the optimization or exclusion of it won’t work on that page.  
Improved: Background lazy-loading for specific cases  
Added: An option to set SB Page Cache lifetime.  
Added: Now you can optimize author and 404 pages.  
Improved: Third-party cache clearing  
Changed: All similar Google Fonts are being merged after download and connect as one to get rid of duplicates  
Fixed: Bug when lazyload broked audio tags  
Fixed: A couple of bugs with Page Counter when home page is set to “Latest Posts”  
Fixed: Bug when Optimized Background Images option conflicted with Background LazyLoad  
Fixed: Bug when Critical CSS is not being connected to the page when “Use Critical Font” is unchecked  
Fixed: Bug when home page was defined incorectly if was written with http or with www.   
Fixed: Bug preventing onboarding flow to finish in NO_REST Critical CSS import   
Refactored:“Delay All JS” optimization, now scripts are not moved from their places, this improves stability.   

= 2.9.27 =	
Fixed: Minor bug  

= 2.9.25 =	
Fixed: Minor bug   

= 2.9.24 =	
Fixed: Gutenberg block   
Fixed: Elementor block  

= 2.9.23 =	
Fixed: Deactivation popup on the Plugins page.  
Fixed: Bug when Critical CSS was being regenerated after the update.
Fixed: Bug when the cache was kept after removing, disabling, or deactivating the plugin.
Improved: Critical CSS generation.
Improved: Critical Fonts generation.
Fixed: Bug with the Optimized Background Images option.

= 2.8.35 =
Fixed: Security issue 

= 2.8.34 =
Fixed: Security issue
Added: BF offer 

= 2.8.32 =
Added: Endpoint to enable/disable CF integration.  
Added: Hooks to clear CF cache. 
Updated: IO package
Added: An option to load fonts after CSS load 

= 2.8.19 =
Fixed: Compatibility issue with Wordpress 6.1. 

= 2.8.18 =
Changed: Many UI
Improved: Stability for Critical CSS generation   
Fixed: Incompatibility issues with WPML's Woocommerce Multilingual module   
Improved: Performance improvements  

= 2.7.47 =
Fixed: Critical CSS regeneration issues	  

= 2.7.44 =
Improved: REST API speed
Improved: Page cache.  

= 2.7.37 =
Added: Wp admin dashboard UI changes. 
Added: Optimization of archive and product pages.   

= 2.6.42 =
Improved: Onboarding flow   
Added: A dedicated page to manage Whitelable settings   

= 2.6.40 =
Improved: REST API reliability and Critical CSS generation   

= 2.6.37 =
Fixed: Critical CSS generation  

= 2.6.31 =
Fixed: Minor bug   

= 2.6.30 = 
Changed: Onboarding flow   
Fixed: Bug in page cache on hosted website   

= 2.3.3 = 
Added: Compatibility with WPML  

= 2.3.2 = 
Fixed: Bug in white label 
Improved: Images Lazyload  

= 2.3.1 = 
Improved: Plugin white label 
Improved: Images Lazyload (Now works with picture tags and srcsets)
Improved: Critical CSS stability  

= 2.3.0 = 
Added: Option to white label admin dashboard 

= 2.2.18 = 
Improved: Font preload    
Added: New special mode for collecting images   

= 2.2.16 =
Fixed: Page cache if it is not correctly set up.

= 2.2.15 =
Fixed: Warning messages about WebP and Page Caching
Fixed: Warning about advanced-cache.php
Reduced: Vendor size
Updated: Incompatible plugins list

= 2.2.12 =
Added: Test mode
Fixed: Bug in page cache  

= 2.2.8 =
Improved: Critical CSS stability  
Fixed: Bug in page cache  
Fixed: Bug in clear cache   

= 2.0.27 =
Disabled: Cleare cache trigger on ACF update   
Removed: Deactivation popup for hosted websites   
Changed: Notification texts      

= 2.0.26 =
Added:  Notice about incompatible plugins 

= 2.0.25 =
Fixed: Bug in the page cache 
Added: Trigger to clear page cache on page edit 

= 2.0.22 =
Fixed: Conflicts with 3rd party plugins images lazy load   
Improved: Optimization flow   
Fixed: Bug in JS delay   

= 2.0.21 =
Added: Image optimization for additional pages 
Added: Deactivation pop-up 

= 2.0.18 =
Improved: Optimization flow  

= 2.0.17 =
Changed: Composer update for image optimizer  

= 2.0.16 =
Added: Clear cache on disconnect website
Added: Compatibility for connecting from Photo Gallery plugin.

= 2.0.15 =
Changed: Get Critical CSS via Rest API instead of Ajax call  

= 2.0.14 =
Fixed: Bug in homepage optimization flow 

= 2.0.13 =
Fixed: Conflicts with third party plugins and hostings caches	
Fixed: Bug in tag attributes 

= 2.0.12 =
Fixed: Google ads display
Fixed: Uncritical CSS loading with worker 

= 2.0.11 =
Changed: Welcome page design
Fixed: Bug in Critical CSS generation

= 2.0.10 =
Added: Rest route to edit optimization settings via REST API

= 2.0.9 =
* Fixed: Minor bug

= 2.0.7 =
* Fixed: Whitelabel bug
* Fixed: bug with redirection after update

= 2.0.3 =
* Initial version on wp.org

